%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Alexander Pöppl at 2020-10-27 12:03:08 +0100 


%% Saved with string encoding Unicode (UTF-8) 

@inproceedings{poeppl2023dpecho,
	author = {P\"{o}ppl, Alexander and Cielo, Salvatore and Egelhofer, Margarita},
	title = {Portability and Scaling of the DPEcho GR-MHD SYCL code: What’s new for numerical Astrophysics in SYCL2020},
	year = {2023},
	isbn = {9798400707452},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3585341.3585382},
	doi = {10.1145/3585341.3585382},
	booktitle = {Proceedings of the 2023 International Workshop on OpenCL},
	articleno = {22},
	numpages = {1},
	location = {, Cambridge, United Kingdom, },
	series = {IWOCL '23}
}

@inproceedings{bogusz2020frameworks,
	Author = {Bogusz, Martin and Samfass, Philipp and P{\"o}ppl, Alexander and Klinkenberg, Jannis and Bader, Michael},
	Booktitle = {PAW-ATM: Parallel Applications Workshop, Alternatives To MPI+X},
	Date-Added = {2020-07-15 20:10:12 +0200},
	Date-Modified = {2020-10-19 12:01:06 +0200},
	Month = {7},
	Note = {To Appear},
	Publisher = {IEEE},
	Title = {Evaluation of Multiple HPC Parallelization Frameworks in a Shallow Water Mini Application with Multi-Rate Local Time Stepping},
	Year = {2020}}

@inproceedings{poeppl2015gpus,
	Abstract = {We present a model for the automated prediction of average execution times for OpenCL-based computations on GPUs. The model encompasses the whole execution of the computation, including the transfer to and from the GPU, and the kernel execution itself. In contrast to existing static prediction frameworks, we incorporate the caches available on modern GPUs into our model. Using our benchmark suite, we show that memory access patterns can be grouped into five patterns that exhibit significantly different memory access performance. By extending our static analysis framework to differentiate the performance behavior of these memory access patterns, we improve on predictions made by existing GPU performance models. In order to evaluate the quality of our model, we compare cache-aware and cache-unaware predictions for a large set of randomly generated OpenCL kernels with their actual execution time.},
	Address = {Cham},
	Author = {P{\"o}ppl, Alexander and Herz, Alexander},
	Booktitle = {Euro-Par 2015: Parallel Processing Workshops},
	Date-Added = {2020-10-19 11:12:48 +0200},
	Date-Modified = {2020-10-27 11:12:29 +0100},
	Doi = {10.1007/978-3-319-27308-2_60},
	Editor = {Hunold, Sascha and Costan, Alexandru and Gim{\'e}nez, Domingo and Iosup, Alexandru and Ricci, Laura and G{\'o}mez Requena, Mar{\'\i}a Engracia and Scarano, Vittorio and Varbanescu, Ana Lucia and Scott, Stephen L. and Lankes, Stefan and Weidendorfer, Josef and Alexander, Michael},
	Isbn = {978-3-319-27308-2},
	Month = {12},
	Pages = {749--760},
	Publisher = {Springer International Publishing},
	Title = {A Cache-Aware Performance Prediction Framework for GPGPU Computations},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-27308-2_60}}

@conference{poeppl2015uchpc,
	Abstract = {We present a model for the automated prediction of average execution times for OpenCL-based computations on GPUs. The model encompasses the whole execution of the computation, including the transfer to and from the GPU, and the kernel execution itself. In contrast to existing static prediction frameworks, we incorporate the caches available on modern GPUs into our model. Using our benchmark suite, we show that memory access patterns can be grouped into five patterns that exhibit significantly different memory access performance. By extending our static analysis framework to differentiate the performance behavior of these memory access patterns, we improve on predictions made by existing GPU performance models. In order to evaluate the quality of our model, we compare cache-aware and cache-unaware predictions for a large set of randomly generated OpenCL kernels with their actual execution time.},
	Address = {Vienna, Austria},
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {The 8th Workshop on UnConventional High Performance Computing 2015 (UCHPC 2015)},
	Date-Added = {2020-10-19 11:57:27 +0200},
	Date-Modified = {2020-10-27 11:24:25 +0100},
	Editor = {Breitbart, Jens and Weidendorfer, Josef},
	Language = {en},
	Month = {8},
	Organization = {TU Wien},
	Title = {A cache-aware performance prediction framework for GPGPU computations},
	Year = {2015},
	Bdsk-Url-1 = {https://link.springer.com/chapter/10.1007%252F978-3-319-27308-2_60}}

@inproceedings{poeppl2016swex10,
	Author = {P{\"o}ppl, Alexander and Bader, Michael},
	Booktitle = {Proceedings of the Sixth ACM SIGPLAN X10 Workshop (X10)},
	Date-Modified = {2020-08-13 11:37:03 +0200},
	Doi = {10.1145/2931028.2931034},
	Location = {Santa Barbara, CA, USA},
	Month = {6},
	Note = {Extended Abstract},
	Publisher = {ACM},
	Title = {{SWE-X10}: An Actor-based and Locally Coordinated Solver for the Shallow Water Equations},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1145/2931028.2931034}}

@conference{poeppl2016x10pres,
	Address = {Santa Barbara, CA, USA},
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {The 6th ACM SIGPLAN Workshop on X10},
	Date-Added = {2020-10-19 11:56:21 +0200},
	Date-Modified = {2020-10-27 11:24:19 +0100},
	Isbn = {978-1-4503-4386-2},
	Language = {en},
	Month = {6},
	Organization = {Association for Computing Machinery (ACM)},
	Title = {SWE-X10: An Actor-Based and Locally Coordinated Solver for the Shallow Water Equations},
	Year = {2016}}

@conference{poeppl2016espm2,
	Abstract = {We present an efficient Finite Volume solver for the shallow water equations using an actor extension of the X10 programming language, ActorX10, as programming model. Each actor is assigned to a Cartesian patch of the computational grid. Using the actor's finite state machine to control patch updates, we realize lazy activation of patches, only when a propagating wave enters the respective patch. Overlapping of communication and computation in the fully non-central actor-based control, as well as careful optimization (esp. vectorization) of kernels leads to high performance and parallel efficiency in shared and distributed memory. Benefits of lazy activation are demonstrated via reduced CPU hours for a benchmark scenario.},
	Address = {Salt Lake City, UT, USA},
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {2016 Second International Workshop on Extreme Scale Programming Models and Middleware (ESPM2)},
	Date-Added = {2020-10-19 11:54:24 +0200},
	Date-Modified = {2020-10-27 11:24:13 +0100},
	Language = {en},
	Month = {11},
	Note = {contributed},
	Organization = {IEEE},
	Title = {SWE-X10: Simulating shallow water waves with lazy activation of patches using ActorX10},
	Year = {2016},
	Bdsk-Url-1 = {https://ieeexplore.ieee.org/document/7831558}}

@inproceedings{poeppl2016lazy,
	Abstract = {We present an efficient Finite Volume solver for the shallow water equations using an actor extension of the X10 programming language, ActorX10, as programming model. Each actor is assigned to a Cartesian patch of the computational grid. Using the actor's finite state machine to control patch updates, we realize lazy activation of patches, only when a propagating wave enters the respective patch. Overlapping of communication and computation in the fully non-central actor-based control, as well as careful optimization (esp. vectorization) of kernels leads to high performance and parallel efficiency in shared and distributed memory. Benefits of lazy activation are demonstrated via reduced CPU hours for a benchmark scenario.},
	Author = {P{\"o}ppl, Alexander and Bader, Michael and Schwarzer, Tobias and Gla{\ss}, Michael},
	Booktitle = {2016 Second International Workshop on Extreme Scale Programming Models and Middleware (ESPM2)},
	Date-Added = {2020-06-26 20:25:14 +0200},
	Date-Modified = {2020-10-19 10:59:01 +0200},
	Doi = {10.1109/ESPM2.2016.010},
	Keywords = {microprocessor chips;CPU;shared memory;distributed memory;optimization;control patch;actor finite state machine;computational grid;Cartesian patch;programming model;ActorX10;X10 programming language;shallow water equations;finite volume solver;Actorx10;lazy activation;simulating shallow water waves;SWE-X10;Computational modeling;Ports (Computers);Mathematical model;Programming;Dynamic scheduling;Load modeling;Numerical models;High performance computing;parallel programming;performance analysis;computer languages},
	Month = {11},
	Pages = {32-39},
	Title = {SWE-X10: Simulating Shallow Water Waves with Lazy Activation of Patches Using Actorx10},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1109/ESPM2.2016.010}}

@conference{poeppl2017copenhagen,
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {Accelerator Meeting, DTU Copenhagen},
	Date-Added = {2020-10-19 11:47:29 +0200},
	Date-Modified = {2020-10-27 11:23:56 +0100},
	Month = {11},
	Note = {Unpublished Presentation},
	Title = {Shallow Water Waves on a Deep Technology Stack: Accelerating a Finite Volume Tsunami Model using Reconfigurable Hardware in Invasive Computing},
	Year = {2017}}

@conference{poeppl2017icorepres,
	Abstract = {Reconfigurable architectures are commonly used in the embedded systems domain to speed up compute-intensive tasks. They combine a reconfigurable fabric with a general-purpose microprocessor to accelerate compute-intensive tasks on the fabric while the general-purpose CPU is used for the rest of the workload. Through the use of invasive computing, we aim to show the feasibility of this technology for HPC scenarios. We demonstrate this by accelerating a proxy application for the simulation of shallow water waves using the i-Core, a reconfigurable processor that is part of the invasive computing multiprocessor system-on-chip. Using a floating-point custom instruction, the entire computation of numerical fluxes occurring in the application's finite volume scheme is performed by hardware accelerators.},
	Address = {Santiago de Compostela, Spain},
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {The 10th Workshop on UnConventional High Performance Computing 2017 (UCHPC 2017)},
	Date-Added = {2020-06-17 18:34:28 +0200},
	Date-Modified = {2020-10-27 11:24:07 +0100},
	Language = {en},
	Month = {8},
	Organization = {Universidade de Santiago de Compostela},
	Title = {Shallow Water Waves on a Deep Technology Stack: Accelerating a Finite Volume Tsunami Model using Reconfigurable Hardware in Invasive Computing},
	Year = {2017},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-75178-8_54},
	Bdsk-Url-2 = {https://mediatum.ub.tum.de/1487718}}

@inproceedings{poeppl2018shallow,
	Abstract = {Reconfigurable architectures are commonly used in the embedded systems domain to speed up compute-intensive tasks. They combine a reconfigurable fabric with a general-purpose microprocessor to accelerate compute-intensive tasks on the fabric while the general-purpose CPU is used for the rest of the workload. Through the use of invasive computing, we aim to show the feasibility of this technology for HPC scenarios. We demonstrate this by accelerating a proxy application for the simulation of shallow water waves using the i-Core, a reconfigurable processor that is part of the invasive computing multiprocessor system-on-chip. Using a floating-point custom instruction, the entire computation of numerical fluxes occurring in the application's finite volume scheme is performed by hardware accelerators.},
	Address = {Cham},
	Author = {P{\"o}ppl, Alexander and Damschen, Marvin and Schmaus, Florian and Fried, Andreas and Mohr, Manuel and Blankertz, Matthias and Bauer, Lars and Henkel, J{\"o}rg and Schr{\"o}der-Preikschat, Wolfgang and Bader, Michael},
	Booktitle = {Euro-Par 2017: Parallel Processing Workshops},
	Date-Added = {2020-06-04 10:16:35 +0200},
	Date-Modified = {2020-10-19 11:41:00 +0200},
	Doi = {10.1007/978-3-319-75178-8_54},
	Editor = {Heras, Dora B. and Boug{\'e}, Luc and Mencagli, Gabriele and Jeannot, Emmanuel and Sakellariou, Rizos and Badia, Rosa M. and Barbosa, Jorge G. and Ricci, Laura and Scott, Stephen L. and Lankes, Stefan and Weidendorfer, Josef},
	Isbn = {978-3-319-75178-8},
	Month = {2},
	Pages = {676--687},
	Publisher = {Springer International Publishing},
	Title = {Shallow Water Waves on a Deep Technology Stack: Accelerating a Finite Volume Tsunami Model Using Reconfigurable Hardware in Invasive Computing},
	Year = {2018},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-75178-8_54}}

@conference{poeppl2018lbl,
	Address = {Berkeley, CA, USA},
	Annote = {Dokumenttyp:
Nicht ver{\"o}ffentlichter Vortrag 
Autor(en):
P{\"o}ppl, Alexander 
Titel:
Shallow Water on a Deep Technology Stack - Actor-Based Tsunami Simulation using Invasive Computing 
Stichworte:
MAC Cluster; High Performance Computing; Invasive Computing 
Abstract:
Heterogeneous resources such as GPUs, FPGAs and an ever increasing node and core count complicate design and implementation of HPC applications. The traditional bulk synchronous parallelism model and the static approach that applications implementing it follow do not seem to fit these new circumstances. Although the implementation of efficient applications in the aforementioned manner is possible, developers now have to depend on an ever increasing number of frameworks and libraries, for example...    »
 
Veranstaltung:
CS Seminar, Lawrence Berkeley National Laboratory 
Veranstalter:
Scott Baden 
Publikationsdatum:
16.03.2018 
Jahr:
2018 
Monat:
Mar 
Sprache:
en 
TUM Einrichtung:
Department of Informatics, Technical University of Munich },
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {CS Seminar},
	Date-Added = {2020-10-19 11:49:59 +0200},
	Date-Modified = {2020-10-19 11:52:49 +0200},
	Month = {3},
	Organization = {Lawrence Berkeley National Laboratory},
	Title = {Shallow Water on a Deep Technology Stack - Actor-Based Tsunami Simulation using Invasive Computing},
	Year = {2018}}

@conference{poeppl2018lblfinal,
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {CRD Seminar},
	Date-Added = {2020-07-08 16:48:01 +0200},
	Date-Modified = {2020-10-19 11:53:28 +0200},
	Month = {10},
	Organization = {Lawrence Berkeley National Laboratory},
	Title = {Shallow Water on a Berkeley Stack -- Actor-Based Tsunami Simulation through UPC++},
	Year = {2018}}

@conference{poeppl2019pawatm,
	Abstract = {Programmability is one of the key challenges of Exascale Computing. Using the actor model for distributed computations may be one solution. The actor model separates computation from communication while still enabling their overlap. Each actor possesses specified communication endpoints to publish and receive information. Computations are undertaken based on the data available on these channels. We present a library that implements this programming model using UPC++, a PGAS library, and evaluate three different parallelization strategies, one based on rank-sequential execution, one based on multiple threads in a rank, and one based on OpenMP tasks. In an evaluation of our library using shallow water proxy applications, our solution compares favorably against an earlier implementation based on X10, and a BSP-based approach.},
	Address = {Denver, CO, USA},
	Author = {P{\"o}ppl, Alexander},
	Booktitle = {PAW-ATM: Parallel Applications Workshop, Alternatives To MPI+X},
	Date-Modified = {2020-10-27 11:23:35 +0100},
	Language = {en},
	Month = {11},
	Note = {contributed},
	Organization = {IEEE, ACM sigARCH},
	Title = {A UPC++ Actor Library and its Evaluation on a Shallow Water Application},
	Year = {2019},
	Bdsk-Url-1 = {https://mediatum.ub.tum.de/doc/1531045/1531045.pdf}}

@inproceedings{poeppl2019pond,
	Abstract = {Programmability is one of the key challenges of Exascale Computing. Using the actor model for distributed computations may be one solution. The actor model separates computation from communication while still enabling their overlap. Each actor possesses specified communication endpoints to publish and receive information. Computations are undertaken based on the data available on these channels. We present a library that implements this programming model using UPC++, and evaluate three different parallelization strategies, one based on rank-sequential execution, one based on multiple threads in a rank, and one based on OpenMP tasks. In an evaluation of our library using shallow water proxy applications, our solution compares favorably against an earlier implementation based on X10, and a BSP-based approach.
    },
	Address = {Denver, Colorado, United States of America},
	Author = {P{\"o}ppl, Alexander and Bader, Michael and Baden, Scott},
	Booktitle = {2019 IEEE/ACM Parallel Applications Workshop, Alternatives To MPI (PAW-ATM)},
	Date-Modified = {2020-08-13 11:39:51 +0200},
	Doi = {10.1109/PAW-ATM49560.2019.00007},
	Language = {en},
	Month = {11},
	Organization = {IEEE},
	Pages = {11-24},
	Publisher = {IEEE/ACM/SigArch},
	Title = {A UPC++ Actor Library and Its Evaluation on a Shallow Water Proxy Application},
	Year = {2019},
	Bdsk-Url-1 = {https://conferences.computer.org/sc19w/2019/#!/toc/15}}

@inproceedings{roloff2016actorx10,
	Author = {Roloff, Sascha and P{\"o}ppl, Alexander and Schwarzer, Tobias and Wildermann, Stefan and Bader, Michael and Gla{\ss}, Michael and Hannig, Frank and Teich, J\"urgen},
	Booktitle = {Proceedings of the Sixth ACM SIGPLAN X10 Workshop (X10)},
	Date-Modified = {2020-10-19 11:41:36 +0200},
	Doi = {10.1145/2931028.2931033},
	Location = {Santa Barbara, CA, USA},
	Month = {6},
	Publisher = {ACM},
	Title = {{ActorX10}: {An} Actor Library for {X10}},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1145/2931028.2931033}}

@article{wildermann2016flow,
	Address = {Berlin, Boston},
	Author = {Wildermann, Stefan and Bader, Michael and Bauer, Lars and Damschen, Marvin and Gabriel, Dirk and Gerndt, Michael and Gla{\ss}, Michael and Henkel, J{\"o}rg and Paul, Johny and P{\"o}ppl, Alexander and Roloff, Sascha and Schwarzer, Tobias and Snelting, Gregor and Stechele, Walter and Teich, J{\"u}rgen and Weichslgartner, Andreas and Zwinkau, Andreas},
	Date-Added = {2020-07-09 19:07:50 +0200},
	Date-Modified = {2020-10-19 12:04:03 +0200},
	Doi = {10.1515/itit-2016-0021},
	Journal = {it - Information Technology},
	Month = {6},
	Number = {6},
	Pages = {267 - 280},
	Publisher = {De Gruyter Oldenbourg},
	Title = {Invasive computing for timing-predictable stream processing on MPSoCs},
	Volume = {58},
	Year = {2016},
	Bdsk-Url-1 = {https://www.degruyter.com/view/journals/itit/58/6/article-p267.xml},
	Bdsk-Url-2 = {https://doi.org/10.1515/itit-2016-0021}}
